#!/usr/bin/env node

const path = require('path');
const os = require('os');
const nconf = require('nconf');
const fg = require('fast-glob');
const yargs = require('yargs');
const nsutil = require('../');

// Utilities
const remove = (prefix, value) => value.replace(prefix, '');
const toCamelCase = str => {
  const string = str
    .toLowerCase()
    .replace(/(?:(^.)|([-_\s]+.))/g, s => s.charAt(s.length - 1).toUpperCase());

  return string.charAt(0).toLowerCase() + string.substring(1);
};

// remove the NETSUITE_ prefix and convert to camelCase
const normalizeKey = str => toCamelCase(remove('NETSUITE_', str));

// CLI options
const options = {
  accountId: {
    alias: 'a',
    describe:
      'Account ID. You can find it in: Setup > Integration > Web Services Preferences',
  },
  consumerKey: { alias: 'c', describe: 'Consumer Key.' },
  consumerSecret: { alias: 's', describe: 'Consumer Secret' },
  tokenId: {
    alias: 'i',
    describe:
      'Token ID. You can create one in: Setup > Users/Roles > Access Tokens > New ',
  },
  tokenSecret: {
    alias: 't',
    describe:
      'Token Secret. You can create one in: Setup > Users/Roles > Access Tokens > New ',
  },
  targetDirectory: {
    alias: 'd',
    describe: 'Which folder in netsuite should the files be stored',
  },
  production: { alias: 'p', describe: 'Upload files to production if true' },
  hostname: { alias: 'n', describe: 'Hostname to use for file upload' },
};

const argvOptions = yargs
  .options(options)
  .usage('Usage: $0 [options] files')
  .help('h')
  .alias('h', 'help');

// Load configurations from cli command, then environment variables, and finally
// from the configuration file (also perform lookup for the file)
nconf
  .argv(argvOptions)
  .env({
    whitelist: Object.keys(options),
    parseValues: true,
    transform: ({ key, value }) => ({ key: normalizeKey(key), value }),
  })
  .file({ file: '.netsuiterc.json', search: true })
  .defaults({
    nsVersion: '2017_2',
    production: false,
  });

// I think we have everything we need, so let's start uploading files
const client = new nsutil.SuiteTalk();
const files = nconf.get('_');
const uploadFile = file =>
  Promise.resolve()
    .then(() => console.log(`Uploading ${file} to ${client.hostname}`))
    .then(() =>
      client.upload(
        file,
        `${nconf.get('targetDirectory')}/${path.basename(file)}`
      )
    )
    .then(f =>
      console.log(
        `Uploaded: ${nconf.get('targetDirectory')}/${path.basename(file)}`
      )
    );

if (nconf.get('hostname')) {
  client.hostname = nconf.get('hostname');
}

Promise.all([
  fg(files),
  client.initTokenBasedAuthentication(
    nconf.get('accountId'),
    nconf.get('consumerKey'),
    nconf.get('consumerSecret'),
    nconf.get('tokenId'),
    nconf.get('tokenSecret'),
    nconf.get('nsVersion'),
    nconf.get('production')
  ),
])
  .then(([files]) => {
    if (!files.length) {
      throw new Error('No files found to upload');
    }

    return files;
  })
  .then(files => Promise.all(files.map(uploadFile)))
  .catch(e => console.error(e));
